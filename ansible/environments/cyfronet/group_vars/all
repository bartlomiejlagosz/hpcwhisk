#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
db_provider: CouchDB
db_username: whisk_admin
db_password: some_passw0rd
db_protocol: http
db_host: 149.156.182.156
db_port: 5984
db_controller_user: whisk_local_controller0
db_controller_pass: some_controller_passw0rd
db_invoker_user: whisk_local_invoker0
db_invoker_pass: some_invoker_passw0rd

openwhisk_tmp_dir: "{{ lookup('env', 'OPENWHISK_TMP_DIR')|default('/tmp' if ansible_distribution == 'MacOSX' else '/var/tmp', true) }}"
config_root_dir: "{{ openwhisk_tmp_dir }}/wskconf"
whisk_images_dir: "/home/ubuntu/openwhisk-images"
whisk_logs_dir: "{{ openwhisk_tmp_dir }}/wsklogs"
coverage_enabled: "{{ lookup('env', 'GRADLE_COVERAGE') | default('false', true) | bool}}"
coverage_logs_dir: "{{ openwhisk_tmp_dir }}/wskcov"
docker_dns: ""
docker_registry: ""
runtimes_bypass_pull_for_local_images: true
invoker_use_runc: "{{ ansible_distribution != 'MacOSX' }}"
invoker_user_memory: 3072m
invoker_slurm_modules: ["plgrid/tools/singularity/stable", "plgrid/tools/java8/1.8.0_144"]
invoker_singularity_image_path: "/net/archive/groups/plggwhisk/images/"

db_prefix: whisk_local_

# API GW connection configuration
apigw_auth_user: ""
apigw_auth_pwd: ""
apigw_host_v2: "http://{{ groups['apigateway']|first }}:{{apigateway.port.api}}/v2"

invoker_allow_multiple_instances: true

# Set kafka configuration
kafka_heap: '512m'
kafka_topics_completed_retentionBytes: 104857600
kafka_topics_completed_retentionMS: 300000
kafka_topics_health_retentionBytes: 104857600
kafka_topics_health_retentionMS: 300000
kafka_topics_invoker_retentionBytes: 104857600
kafka_topics_invoker_retentionMS: 300000

env_hosts_dir: "{{ playbook_dir }}/environments/cyfronet"

container_pool_akka_client: true
runtimes_enable_concurrency: true
limit_action_concurrency_max: 500
#limit_action_time_max: 50m
limit_invocations_per_minute: 12000000
limit_invocations_concurrent: 500000
#controller_extraEnv:
#  "CONFIG_whisk_controller_activation_maxWaitForBlockingActivation": "40 m"
#  "CONFIG_akka_http_server_requestTimeout": "2420 s"
#  "CONFIG_akka_http_server_lingerTimeout": "2420 s"
#  "CONFIG_akka_http_hostConnectionPool_idleTimeout": "2420 s"
#  "CONFIG_akka_http_server_idleTimeout": "2420 s"
